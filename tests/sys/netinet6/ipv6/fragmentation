#! /usr/libexec/atf-sh
#! /usr/libexec/atf-sh
# $FreeBSD$

. $(atf_get_srcdir)/utils.subr

atf_test_case "frag6" "cleanup"

frag6_head()
{
	atf_set descr 'regress/frag6/frag6.py'
	atf_set require.user root
}

frag6_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6.py'
}

frag6_cleanup()
{
	v6_cleanup
}

atf_test_case "frag6_ext" "cleanup"

frag6_ext_head()
{
	atf_set descr 'regress/frag6/frag6_ext.py'
	atf_set require.user root
}

frag6_ext_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6_ext.py'
}

frag6_ext_cleanup()
{
	v6_cleanup
}

atf_test_case "frag6_hop" "cleanup"

frag6_hop_head()
{
	atf_set descr 'regress/frag6/frag6_hop.py'
	atf_set require.user root
}

frag6_hop_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6_hop.py'
}

frag6_hop_cleanup()
{
	v6_cleanup
}

atf_test_case "frag6_maxlen" "cleanup"

frag6_maxlen_head()
{
	atf_set descr 'regress/frag6/frag6_maxlen.py'
	atf_set require.user root
}

frag6_maxlen_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6_maxlen.py'
}

frag6_maxlen_cleanup()
{
	v6_cleanup
} 

atf_test_case "frag6_mf0atomic" "cleanup"

frag6_mf0atomic_head()
{
	atf_set descr 'regress/frag6/frag6_mf0atomic.py'
	atf_set require.user root
}

frag6_mf0atomic_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6_mf0atomic.py'
}

frag6_mf0atomic_cleanup()
{
	v6_cleanup
} 

atf_test_case "frag6_mf0long" "cleanup"

frag6_mf0long_head()
{
	atf_set descr 'regress/frag6/frag6_mf0long.py'
	atf_set require.user root
}

frag6_mf0long_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6_mf0long.py'
}

frag6_mf0long_cleanup()
{
	v6_cleanup
} 

atf_test_case "frag6_mf0middle" "cleanup"

frag6_mf0middle_head()
{
	atf_set descr 'regress/frag6/frag6_mf0middle.py'
	atf_set require.user root
}

frag6_mf0middle_body()
{
	v6_init
	v6_scapytest 'regress/frag6' 'frag6_mf0middle.py'
}

frag6_mf0middle_cleanup()
{
	v6_cleanup
} 
 
atf_init_test_cases()
{
	atf_add_test_case "frag6"
	atf_add_test_case "frag6_ext"
	atf_add_test_case "frag6_hop"
	atf_add_test_case "frag6_maxlen"
	atf_add_test_case "frag6_mf0atomic"
	atf_add_test_case "frag6_mf0long"
	atf_add_test_case "frag6_mf0middle"
}
